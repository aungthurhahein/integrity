#!/usr/local/bin/bash
#set -x

# TODO:
# 1) REBUILD A CLIENT
# Atm -r recreate the hash and mtree files of all clients. With
# -a|<client> rebuild a single client only

# NOTES:
# Files not included in hash-files will be listed (VERBOSE only)
# Changed files in the hash-files will be listed (hash error)

# CONFIGURATION:
# Ubuntu configuration
# HASHDEEP="/usr/bin/hashdeep"
# HASHDEEPCONF="-w -o f -l -x -k"
# MTREE="/usr/bin/fmtree"
# FreeBSD configration
HASHDEEP="/usr/local/bin/md5deep"
HASHDEEPCONF="-w -o f -l -x"
MTREE="/usr/sbin/mtree"
# General configuration
LINKDIR="/integrity/link"
METADIR="/integrity/meta"
EXTHASH="hashdeep"
EXTMTREE="mtree"
EXTEXCLUDE="exclude"
# default set of keywords are flags, gid, link, mode, nlink, size, time, and uid
MTREEKEYS="-k gid,link,mode,nlink,size,time,uid"
HASHDEEPCONF_CREATE="-e -o f -l "

[ -f /etc/integrity ] && . /etc/integrity
[ -f ~/.integrity ] && . ~/.integrity

USAGE="$(basename "$0") [-h|--help] [-s|--silent] [-c|--commands] [-r|--recreate] [-l|--list]
          [-i|--init] [-a|--all|<client>] -- check integrity
where:
    -h --help             show this help
    -s --silent           report errors only
    -c --commands         list commands to create the hash and mtree files
    -r --recreate         recreate the hash and mtree files of a <client>, or -all
    -i --init             create missing hash and mtree files
    -l --list             list clients
    -a --all              check integrity of all clients
    <client>              check integrity of a client"

EXPECTED_ARGS=1
if [ $# -lt $EXPECTED_ARGS ]; then
    echo "$USAGE"
    exit
fi


function hash-create-conf {
    if [ -s "$METADIR/$CLIENT.$EXTEXCLUDE" ]; then
	find $LINKDIR/$CLIENT/ -type f | grep -vFf $METADIR/$CLIENT.$EXTEXCLUDE > $METADIR/$CLIENT.files
    else
	find $LINKDIR/$CLIENT/ -type f > $METADIR/$CLIENT.files
    fi
    HASHDEEPCONF_CREATE+="-f "
    HASHDEEPCONF_CREATE+=$METADIR/$CLIENT
    HASHDEEPCONF_CREATE+=".files "
#   (($VERBOSE)) && printf "[OK] integrity:   HASHDEEPCONF_CREATE=$HASHDEEPCONF_CREATE\n"
}

function mtree-create-conf {
    if [ -s "$METADIR/$CLIENT.$EXTEXCLUDE" ]; then
	MTREECONF_CREATE="-X $METADIR/$CLIENT.$EXTEXCLUDE "
    fi
    MTREECONF_CREATE+="-c -p "
#   (($VERBOSE)) && printf "[OK] integrity:   MTREECONF_CREATE=$MTREECONF_CREATE\n"
}

function create-client {
    create-client-hash
    create-client-mtree
    }

function create-client-hash {
    hash-create-conf
    (($VERBOSE)) && printf "[OK] integrity: > Create $METADIR/$CLIENT.$EXTHASH started\n"
    if LOG=$(cd $LINKDIR; $HASHDEEP $HASHDEEPCONF_CREATE > $METADIR/$CLIENT.$EXTHASH); then
	[[ ! -z $LOG ]] && printf "[ERR] integrity:  $HASHDEEP log: $LOG\n"
	(($VERBOSE)) && printf "[OK] integrity:   $CLIENT hash initialized\n"
    else
	printf "[ERR] integrity:   $CLIENT $HASHDEEP error: $?\n"
	printf "[ERR] integrity:   $CLIENT $HASHDEEP log: \n$LOG\n"
    fi
    (($VERBOSE)) && printf "[OK] integrity:   Create $METADIR/$CLIENT.$EXTHASH finished <\n"
}

function create-client-mtree {
    mtree-create-conf
    (($VERBOSE)) && printf "[OK] integrity: > create $METADIR/$CLIENT.$EXTMTREE started\n"
    if LOG=$(cd $LINKDIR; $MTREE $MTREEKEYS $MTREECONF_CREATE $CLIENT/ >  $METADIR/$CLIENT.$EXTMTREE); then
	(($VERBOSE)) && printf "[OK] integrity:   $CLIENT mtree initialized\n"
	(($VERBOSE)) && [[ ! -z $LOG ]] && printf "[OK] integrity:   mtree: \n$LOG\n"
    else
	printf "[ERR] integrity:   $CLIENT mtree error: $?\n"
	printf "[ERR] integrity:   $CLIENT mtree log: \n$LOG\n"
    fi
    (($VERBOSE)) && printf "[OK] integrity:   Create $METADIR/$CLIENT.$EXTMTREE finished <\n"
}

function check-integrity {
    (($VERBOSE)) && printf "[OK] integrity: > $CLIENT check started\n"
    if [ -e "$METADIR/$CLIENT.$EXTHASH" ]; then
	if LOG=$(cd $LINKDIR; $HASHDEEP $HASHDEEPCONF $METADIR/$CLIENT.$EXTHASH -f $METADIR/$CLIENT.files 2>&1); then
	    [[ ! -z $LOG ]] && printf "[ERR] integrity:   $HASHDEEP log: \n$LOG\n"
	    (($VERBOSE)) && printf "[OK] integrity:   $CLIENT hash check finished\n"
	else
	    printf "[ERR] integrity:   $CLIENT $HASHDEEP error: $?\n"
	    printf "[ERR] integrity:   $CLIENT $HASHDEEP log: \n$LOG\n"
	fi
    elif [ $INIT -eq 1 ]; then
	create-client-hash
    else
	printf "[ERR] integrity:   $METADIR/$CLIENT.$EXTHASH does not exist\n"
    fi
    if [ -e "$METADIR/$CLIENT.$EXTMTREE" ]; then
        if LOG=$(cd $LINKDIR; $MTREE -f $METADIR/$CLIENT.$EXTMTREE -p $CLIENT/ 2>&1); then
	    (($VERBOSE)) && printf "[OK] integrity:   $CLIENT mtree correct\n"
	    (($VERBOSE)) && [[ ! -z $LOG ]] && printf "[OK] integrity:   mtree: \n$LOG\n"
	else
	    printf "[ERR] integrity:   $CLIENT mtree error: $?\n"
	    printf "[ERR] integrity:   $CLIENT mtree log: \n$LOG\n"
	fi
    elif [ $INIT -eq 1 ]; then
	create-client-mtree
    else
	printf "[ERR] integrity:   $METADIR/$CLIENT.$EXTMTREE does not exist\n"
    fi
    (($VERBOSE)) && printf "[OK] integrity:   $CLIENT check finished <<<\n"
}

VERBOSE=1
INIT=0
RECREATE=0
CLIENTS=$(cd $LINKDIR;ls -1)
for i in "$@"; do
    case $i in
	-s|--silent)
	    VERBOSE=0
	    ;;
	-i|--init)
	    INIT=1
	    ;;
	-r|--recreate)
	    RECREATE=1
	    ;;
	-h|--help)
	    echo "$USAGE"
	    exit
	    ;;
	-l|--list)
	    printf "$CLIENTS\n"
	    exit
	    ;;
	-c|--commands)
	    printf "Commands to create the hash and mtree files: TBD (wip)\n"
#	    for i in $CLIENTS; do
#		printf "cd $LINKDIR; $HASHDEEP -e -o f -l -r $i/ > $METADIR/$i.$EXTHASH\n"
#		printf "cd $LINKDIR; $MTREE $MTREEKEYS -c -p $i/ > $METADIR/$i.$EXTMTREE\n"
#		printf "\n"
#	    done
	    exit
	    ;;
	-a|--all)
	    for CLIENT in $CLIENTS; do
		(($RECREATE)) || check-integrity
		(($RECREATE)) && create-client
	    done
	    ;;
	*)
	    if [[ $CLIENTS =~ $i ]] ; then
		CLIENT=$i
		(($RECREATE)) || check-integrity
		(($RECREATE)) && create-client
	    else
		printf "[ERR] integrity: Unknown client $i\n"
	    fi
	    ;;
    esac
done

exit
