#!/usr/local/bin/bash
#set -x

#VERSION="0.2.5-CURRENT"
VERSION="0.2.4"

# NOTES:
# Files not included in hash-files will be listed (VERBOSE only)
# Changed files in the hash-files will be listed (hash error)

# CONFIGURATION:
# Ubuntu configuration
# HASHDEEP="/usr/bin/hashdeep"
# HASHDEEPCONF="-o f -l -x -k"
# MTREE="/usr/bin/fmtree"
# FreeBSD configration
HASHDEEP="/usr/local/bin/md5deep"
HASHDEEPCONF="-o f -l -x"
MTREE="/usr/sbin/mtree"
# General configuration
LINKDIR="/integrity/link"
METADIR="/integrity/meta"
EXTHASH="hashdeep"
EXTMTREE="mtree"
EXTEXCLUDE="exclude"
# default set of keywords are flags, gid, link, mode, nlink, size, time, and uid
MTREEKEYS="-k gid,link,mode,nlink,size,time,uid"
HASHDEEPCONF_CREATE="-o f -l "
MTREECONF=""
MTREE_REPORT_EXTRA_FILES_AS_ERROR="0"

[ -f /etc/integrity ] && . /etc/integrity
[ -f /usr/local/etc/integrity ] && . /usr/local/etc/integrity
[ -f ~/.integrity ] && . ~/.integrity
[ -f ./.integrity ] && . ./.integrity

USAGE="
integrity [-h|--help] [-V|--version] [-l|--list] [-c|--commands]
          [-s|--silent] [-d|--debug]
          [-i|--init] [-r|--recreate] [-a|--all|<client>] -- check integrity
where:
 -h --help ......... show this help and exit
 -V --version ...... print version and exit
 -l --list ......... list clients and exit
 -c --commands ..... list commands to create the hash and mtree files and exit
 -s --silent ....... report errors only
 -d --debug ........ print debug messages
 -i --init ......... create missing hash and mtree files
 -r --recreate ..... recreate the hash and mtree files of a <client>, or --all
 -a --all .......... check integrity of all clients
 <client> .......... check integrity of a client"

EXPECTED_ARGS=1
if [ $# -lt $EXPECTED_ARGS ]; then
    echo "$USAGE"
    exit
fi


function log-ok {
    (($VERBOSE)) && printf "[OK]  integrity: $MESSAGE\n"
}

function log-dbg {
    (($DEBUG)) && printf "[DBG] integrity: $MESSAGE\n"
}

function log-err {
    printf "[ERR] integrity: $MESSAGE\n"
}

function hash-create-conf {
    if [ -s "$METADIR/$CLIENT.$EXTEXCLUDE" ]; then
	MESSAGE="  hash-create-conf: $METADIR/$CLIENT.$EXTEXCLUDE found."; log-dbg
	find $LINKDIR/$CLIENT/ -type f | grep -vEf $METADIR/$CLIENT.$EXTEXCLUDE > $METADIR/$CLIENT.files
    elif [ -s "$METADIR/$EXTEXCLUDE.default" ]; then
	MESSAGE="  hash-create-conf: $METADIR/$EXTEXCLUDE.default found."; log-dbg
	find $LINKDIR/$CLIENT/ -type f | grep -vEf $METADIR/$EXTEXCLUDE.default > $METADIR/$CLIENT.files
    else
	MESSAGE="  hash-create-conf: No exclude file found."; log-dbg
	find $LINKDIR/$CLIENT/ -type f > $METADIR/$CLIENT.files
    fi
    HASHDEEPCONF_CREATE+="-f "
    HASHDEEPCONF_CREATE+=$METADIR/$CLIENT
    HASHDEEPCONF_CREATE+=".files "
    MESSAGE="  hash-create-conf: HASHDEEPCONF_CREATE=$HASHDEEPCONF_CREATE"; log-dbg
}

function mtree-create-conf {
    if [ -s "$METADIR/$CLIENT.$EXTEXCLUDE" ]; then
	MESSAGE="  mtree-create-conf: $METADIR/$CLIENT.$EXTEXCLUDE found."; log-dbg
	MTREECONF_CREATE="-X $METADIR/$CLIENT.$EXTEXCLUDE "
    elif [ -s "$METADIR/$EXTEXCLUDE.default" ]; then
	MESSAGE="  mtree-create-conf: $METADIR/$EXTEXCLUDE.default found."; log-dbg
	MTREECONF_CREATE="-X $METADIR/$EXTEXCLUDE.default "
    else
	MESSAGE="  mtree-create-conf: No exclude file found."; log-dbg
    fi
    MTREECONF_CREATE+="-c -p "
    MESSAGE="  mtree-create-conf: MTREECONF_CREATE=$MTREECONF_CREATE"; log-dbg
}

function create-client {
    create-client-hash
    create-client-mtree
}

function create-client-hash {
    hash-create-conf
    MESSAGE="> Create $METADIR/$CLIENT.$EXTHASH started"; log-ok
    if LOG=$(cd $LINKDIR; $HASHDEEP $HASHDEEPCONF_CREATE > $METADIR/$CLIENT.$EXTHASH); then
	[[ ! -z $LOG ]] && ($MESSAGE="  $HASHDEEP log: $LOG"; log-ok)
	MESSAGE="  $CLIENT hash initialized"; log-ok
    else
	MESSAGE="  $CLIENT $HASHDEEP error: $?"; log-err
	MESSAGE="  $CLIENT $HASHDEEP log: \n$LOG"; log-err
    fi
    MESSAGE="  Create $METADIR/$CLIENT.$EXTHASH finished <"; log-ok
}

function create-client-mtree {
    mtree-create-conf
    MESSAGE="> Create $METADIR/$CLIENT.$EXTMTREE started"; log-ok
    if LOG=$(cd $LINKDIR; $MTREE $MTREEKEYS $MTREECONF_CREATE $CLIENT/ >  $METADIR/$CLIENT.$EXTMTREE); then
	[[ ! -z $LOG ]] && (MESSAGE="  $MTREE: \n$LOG"; log-ok)
	MESSAGE="  $CLIENT mtree initialized"; log-ok
    else
	MESSAGE="  $CLIENT mtree error: $?"; log-err
	MESSAGE="  $CLIENT mtree log: \n$LOG"; log-err
    fi
    MESSAGE="  Create $METADIR/$CLIENT.$EXTMTREE finished <"; log-ok
}

function mtree-conf {
    (($MTREE_REPORT_EXTRA_FILES_AS_ERROR)) || MTREECONF+="-U "
}

function check-integrity {
    MESSAGE="> $CLIENT check started"; log-ok
    if [ -e "$METADIR/$CLIENT.$EXTHASH" ]; then
	if LOG=$(cd $LINKDIR; $HASHDEEP $HASHDEEPCONF $METADIR/$CLIENT.$EXTHASH -f $METADIR/$CLIENT.files 2>&1); then
	    [[ ! -z $LOG ]] && (MESSAGE="  $HASHDEEP log: \n$LOG"; log-err)
	    MESSAGE="  $CLIENT hash check finished"; log-ok
	else
	    MESSAGE="  $CLIENT $HASHDEEP error: $?"; log-err
	    MESSAGE="  $CLIENT $HASHDEEP log: \n$LOG"; log-err
	fi
    elif [ $INIT -eq 1 ]; then
	create-client-hash
    else
	MESSAGE="  $METADIR/$CLIENT.$EXTHASH does not exist"; log-err
    fi

    mtree-conf
    if [ -e "$METADIR/$CLIENT.$EXTMTREE" ]; then
        if LOG=$(cd $LINKDIR; $MTREE $MTREECONF -f $METADIR/$CLIENT.$EXTMTREE -p $CLIENT/ 2>&1); then
	    [[ ! -z $LOG ]] && (MESSAGE="  $MTREE log: \n$LOG"; log-ok)
	    MESSAGE="  $CLIENT mtree correct"; log-ok
	else
	    MESSAGE="  $CLIENT $MTREE error: $?"; log-err
	    MESSAGE="  $CLIENT $MTREE log: \n$LOG"; log-err
	fi
    elif [ $INIT -eq 1 ]; then
	create-client-mtree
    else
	MESSAGE="  $METADIR/$CLIENT.$EXTMTREE does not exist"; log-err
    fi
    MESSAGE="  $CLIENT check finished <"; log-ok
}

DEBUG=0
VERBOSE=1
INIT=0
RECREATE=0
CLIENTS=$(cd $LINKDIR;ls -1)
for i in "$@"; do
    case $i in
	-d|--debug)
	    DEBUG=1
	    ;;
	-s|--silent)
	    VERBOSE=0
	    ;;
	-i|--init)
	    INIT=1
	    ;;
	-r|--recreate)
	    RECREATE=1
	    ;;
	-h|--help)
	    printf "$USAGE\n"
	    exit
	    ;;
	-V|--version)
	    printf "$VERSION\n"
	    exit
	    ;;
	-l|--list)
	    MESSAGE="  version $VERSION"; log-ok
	    printf "$CLIENTS\n"
	    exit
	    ;;
	-c|--commands)
	    MESSAGE="  version $VERSION"; log-ok
	    MESSAGE="  Commands to create the hash and mtree files: TBD (wip)"; log-ok
	    #	    for i in $CLIENTS; do
	    #		printf "cd $LINKDIR; $HASHDEEP -e -o f -l -r $i/ > $METADIR/$i.$EXTHASH\n"
	    #		printf "cd $LINKDIR; $MTREE $MTREEKEYS -c -p $i/ > $METADIR/$i.$EXTMTREE\n"
	    #		printf "\n"
	    #	    done
	    exit
	    ;;
	-a|--all)
	    MESSAGE="  version $VERSION"; log-ok
	    for CLIENT in $CLIENTS; do
		(($RECREATE)) || check-integrity
		(($RECREATE)) && create-client
	    done
	    ;;
	*)
	    if [[ $CLIENTS =~ $i ]] ; then
		CLIENT=$i
		(($RECREATE)) || check-integrity
		(($RECREATE)) && create-client
	    else
		MESSAGE="  Unknown client $i"; log-err
	    fi
	    ;;
    esac
done

exit 0
